name: CI - Main & Release

# This workflow handles:
# 1. Running release-please on pushes to main
# 2. Running tests on pushes to main
# 3. Building and publishing releases on tag pushes

permissions:
  contents: write # Needed for release job & release-please
  pull-requests: write # Needed for release-please job

on:
  push:
    branches: [ main ]
    tags:
      - 'vscode-v*' # Trigger release job on tag push
  # Removed pull_request trigger - handled by pr-checks.yml
  workflow_dispatch: # Keep for manual releases/testing
    inputs:
      version:
        description: 'Version to release (e.g., 0.1.0)'
        required: true
        type: string

jobs:
  # This job runs ONLY on pushes to the main branch
  release-please:
    name: Create Release PR
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Fetch all history for release-please
      - name: List files in workspace # Debug step
        run: ls -la
      - uses: googleapis/release-please-action@v4
        with:
          config-file: release-please-config.json
          token: ${{ secrets.RELEASE_PLEASE_PAT }} # Use PAT to allow triggering PR checks
          skip-labeling: true

  # This job runs ONLY on pushes to the main branch
  test-on-main:
    name: Lint and Test (Main)
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install Dependencies
        run: |
          npm ci --no-fund --no-audit
          npm ci --no-fund --no-audit --prefix webview-ui

      - name: Lint
        run: |
          npm run lint

      - name: Install Xvfb
        run: |
          sudo apt-get update
          sudo apt-get install -y xvfb

      - name: Run Tests with Xvfb
        run: |
          xvfb-run -a sh -c "npm run test:all && npm run test:package"

      - name: Compile extension and webview
        run: npm run compile # This includes build:webview

  # This job runs ONLY on tag pushes
  release:
    name: Build and Release Extension
    # Removed 'needs: test' - relies on tests passing on main/PRs
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/vscode-v')
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          ref: ${{ github.ref }} # Checkout the specific tag

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Get Version from Tag
        id: version
        run: |
          VERSION="${GITHUB_REF#refs/tags/vscode-v}"
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "Using version: $VERSION"

      - name: Install Dependencies (Root)
        run: npm ci --no-fund --no-audit

      - name: Install Dependencies (Webview)
        run: npm ci --no-fund --no-audit --prefix webview-ui

      - name: Build Extension and Webview
        run: npm run compile

      - name: Package Extension
        run: |
          mkdir -p dist
          PACKAGE_FILENAME="dist/goose-vscode-${{ steps.version.outputs.version }}.vsix"
          npx @vscode/vsce package --no-yarn -o "$PACKAGE_FILENAME"
          if [ ! -f "$PACKAGE_FILENAME" ]; then
            echo "Failed to create the VSIX package: $PACKAGE_FILENAME"
            exit 1
          fi
          ls -l dist

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2.0.8
        with:
          tag_name: ${{ github.ref_name }}
          generate_release_notes: false # Changelog is maintained separately
          files: dist/*.vsix
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Publish to VS Code Marketplace
        if: success() && env.VSCE_PAT != null
        env:
          VSCE_PAT: ${{ secrets.VSCE_PAT }}
        run: |
          PACKAGE_FILENAME="dist/goose-vscode-${{ steps.version.outputs.version }}.vsix"
          echo "Publishing $PACKAGE_FILENAME to VS Code Marketplace..."
          npx @vscode/vsce publish --packagePath "$PACKAGE_FILENAME" --pat $VSCE_PAT
