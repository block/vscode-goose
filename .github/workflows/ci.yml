name: CI - Main & Release

# This workflow handles:
# 1. Running release-please on pushes to main
# 2. Running tests on pushes to main
# 3. Building and publishing releases on tag pushes

permissions:
  contents: write # Needed for release job & release-please
  pull-requests: write # Needed for release-please job

on:
  push:
    branches: [ main ]
  # Removed pull_request trigger - handled by pr-checks.yml
  workflow_dispatch: # Keep for manual testing

jobs:
  # This job runs ONLY on pushes to the main branch
  release-please:
    name: Release Please
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
    outputs:
      release_created: ${{ steps.release.outputs.release_created }}
      tag_name: ${{ steps.release.outputs.tag_name }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Fetch all history for release-please
      
      - name: Run Release Please
        uses: googleapis/release-please-action@v4
        id: release
        with:
          config-file: release-please-config.json
          token: ${{ secrets.RELEASE_PLEASE_PAT }}
          
      # The following steps only run if a release was created
      - name: Setup Node.js
        if: steps.release.outputs.release_created
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install Dependencies (Root)
        if: steps.release.outputs.release_created
        run: npm ci --no-fund --no-audit

      - name: Install Dependencies (Webview)
        if: steps.release.outputs.release_created
        run: npm ci --no-fund --no-audit --prefix webview-ui

      - name: Build Extension and Webview
        if: steps.release.outputs.release_created
        run: npm run compile

      - name: Package Extension
        if: steps.release.outputs.release_created
        run: |
          mkdir -p dist
          VERSION="${{ steps.release.outputs.tag_name }}"
          VERSION="${VERSION#vscode-v}"  # Remove vscode-v prefix
          PACKAGE_FILENAME="dist/vscode-goose-${VERSION}.vsix"
          npx @vscode/vsce package --no-yarn -o "$PACKAGE_FILENAME"
          if [ ! -f "$PACKAGE_FILENAME" ]; then
            echo "Failed to create the VSIX package: $PACKAGE_FILENAME"
            exit 1
          fi
          ls -l dist

      - name: Upload Release Assets
        if: steps.release.outputs.release_created
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh release upload ${{ steps.release.outputs.tag_name }} dist/*.vsix

      - name: Publish to VS Code Marketplace
        if: steps.release.outputs.release_created && env.VSCE_PAT != null
        env:
          VSCE_PAT: ${{ secrets.VSCE_PAT }}
        run: |
          VERSION="${{ steps.release.outputs.tag_name }}"
          VERSION="${VERSION#vscode-v}"  # Remove vscode-v prefix
          PACKAGE_FILENAME="dist/vscode-goose-${VERSION}.vsix"
          echo "Publishing $PACKAGE_FILENAME to VS Code Marketplace..."
          npx @vscode/vsce publish --packagePath "$PACKAGE_FILENAME" --pat $VSCE_PAT

  # This job runs ONLY on pushes to the main branch
  test-on-main:
    name: Lint and Test (Main)
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install Dependencies
        run: |
          npm ci --no-fund --no-audit
          npm ci --no-fund --no-audit --prefix webview-ui

      - name: Lint
        run: |
          npm run lint

      - name: Install Xvfb
        run: |
          sudo apt-get update
          sudo apt-get install -y xvfb

      - name: Run Tests with Xvfb
        run: |
          xvfb-run -a sh -c "npm run test:all && npm run test:package"

      - name: Compile extension and webview
        run: npm run compile # This includes build:webview
